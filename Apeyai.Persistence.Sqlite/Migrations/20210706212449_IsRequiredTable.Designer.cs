// <auto-generated />
using Apeyai.Persistence.Sqlite;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Apeyai.Persistence.Sqlite.Migrations
{
    [DbContext(typeof(SqliteContext))]
    [Migration("20210706212449_IsRequiredTable")]
    partial class IsRequiredTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.7");

            modelBuilder.Entity("Apeyai.Persistence.Sqlite.DbEntities.SchemaDbEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.ToTable("Schemas");
                });

            modelBuilder.Entity("Apeyai.Persistence.Sqlite.DbEntities.TextAttributeDbEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsRequired")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaxLength")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MinLength")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("SchemaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.HasIndex("SchemaId");

                    b.ToTable("TextAttributes");
                });

            modelBuilder.Entity("Apeyai.Persistence.Sqlite.DbEntities.TextAttributeDbEntity", b =>
                {
                    b.HasOne("Apeyai.Persistence.Sqlite.DbEntities.SchemaDbEntity", "Schema")
                        .WithMany("TextAttributes")
                        .HasForeignKey("SchemaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Schema");
                });

            modelBuilder.Entity("Apeyai.Persistence.Sqlite.DbEntities.SchemaDbEntity", b =>
                {
                    b.Navigation("TextAttributes");
                });
#pragma warning restore 612, 618
        }
    }
}
